generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String?
  name      String?
  picture   String?
  role      String   @default("user")
  enabled   Boolean  @default(true)
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  carts     Cart[]
  orders    Order[]
}

model Product {
  id          Int              @id @default(autoincrement())
  title       String
  description String
  price       Float
  sold        Int              @default(0)
  quantity    Int
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  categoryId  Int?
  images      Image[]
  category    Category?        @relation(fields: [categoryId], references: [id])
  cartItems   ProductOnCart[]
  orderItems  ProductOnOrder[]
}

model Order {
  id              Int              @id @default(autoincrement())
  cartTotal       Float
  orderStatus     String           @default("Not Process")
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  orderedById     Int
  stripePaymentId String
  amount          Int
  status          String
  currency        String
  orderedBy       User             @relation(fields: [orderedById], references: [id])
  products        ProductOnOrder[]
}

model ProductOnOrder {
  id        Int     @id @default(autoincrement())
  productId Int
  orderId   Int
  count     Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Cart {
  id          Int             @id @default(autoincrement())
  cartTotal   Float
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  orderedById Int
  orderedBy   User            @relation(fields: [orderedById], references: [id])
  products    ProductOnCart[]
}

model ProductOnCart {
  id        Int     @id @default(autoincrement())
  cartId    Int
  productId Int
  count     Int
  price     Float
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id])
}

model Image {
  id         Int      @id @default(autoincrement())
  asset_id   String
  public_id  String
  url        String
  secure_url String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  productId  Int
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}
